ASSIGNMENT 2

Predict the following output.

1.#include <stdio.h>

void fun(int x)
{
    int x =30;
}

int main(){
    int y =20;
    fun(y);
    printf("%d",y);
    return 0;
}

output: 30.

2.#include <stdio.h>

void fun(int *ptr)
{
    *ptr =30;
}

int main(){
    int y =20;
    fun(&y);
    printf("%d",y);
    return 0;
}
 output: 30
 
 3.#include <stdio.h>
int main(){
   int *ptr;
   int x;
    ptr =&x;
    *ptr =0;
    printf("x =%d\n", x);
    printf("*ptr =%d\n", *ptr);
    *ptr += 5;
    printf("x =%d\n", x);
    printf("*ptr =%d\n", *ptr);
    (*ptr)++;
    printf("x =%d\n", x);
    printf("*ptr =%d\n", *ptr);
    return 0;
}

output: 
*ptr =5                                                                                                                          
x =6
*ptr =6                                                                                                                          
            

4. #include <stdio.h>
int main(){
   char s1[7] = "1234", *p;
   p = s1+2;
   *p = '0';
   printf("%s", s1);

}

output: 1204.			


5. #include <stdio.h>
void f(int *p, int *q){
    p =q;
    *p = 2;
}
int i=0; j=1;
int main(){
   f(&i ,&j);
   printf("%d %d\n", i,j);
   getchar();
   return 0;

}

output: 0 2


6. #include <stdio.h>
int f(int x, int *py, int **ppz){
   int y,z;
   **ppz +=1;
   z= **ppz;
   *py  += 2;
   y = *py;
   x +=3;
   return x+ y+ z;
}
void main(){
  int c, *b, **a;
  c = 4;
  b = &c;
  a = &b;
   printf("%d", f(c,b,a));
   return 0;

}

output: 19.

7.
#include <stdio.h>
int main(){
  int arr[] = {1,2,3,4,5};
  int *p = arr;
  ++*p;
   printf("%d",*p);
   return 0;

}

output: 2.


8. 
#include <stdio.h>
int main(){
 char c[] = "GATE2011";
 char *p= c;
 printf("%s", p +p[3] - p[1]);
}

output:  2011

9.#include <stdio.h>
int main(){
 char arr[] = "workstreet";
 printf("%s",arr);
 return 0;
}

output: workstreet.


10. 
#include <stdio.h>
int fun (char *str1){
    char *str2 =str1;
    while(*++str1)
    return (str1 - str2);    
}
int main(){
 char *str = "workstreet";
 printf("%d",fun(str));
 return 0;
}


output: 1.
         